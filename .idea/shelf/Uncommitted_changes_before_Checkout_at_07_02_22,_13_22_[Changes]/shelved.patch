Index: plotting_functions/spike_synchronisation.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import termios\n\nimport numpy as np\n\n\ndef save_spikes_pyspike( spikes ):\n    filename = '../graph_analysis/E_spikes.txt'\n    \n    with open( filename, 'w' ) as file:\n        file.write( '# Spikes from excitatory population\\n\\n' )\n        for v in spikes.values():\n            np.savetxt( file, np.array( v ), newline=' ' )\n            file.write( '\\n' )\n    \n    return filename\n\n\ndef video_SPIKE_profile( rcn, filename=None, sim_time=6 ):\n    pass\n\n\n# TODO measure algebraic connectivity at regular intervals and add it to plots\n# TODO look at sync in inhibitory neurons\n# TODO count de-synchronised neurons in each attractor\ndef plot_SPIKE_profile( rcn, filename=None, sim_time=6 ):\n    import os\n    import matplotlib.pyplot as plt\n    from scipy.ndimage.filters import uniform_filter1d\n    import pyspike as spk\n    \n    # -- write spikes to text file if it is not supplied or it does not exist\n    if not filename or not os.path.exists( filename ):\n        filename = save_spikes_pyspike( rcn.get_E_spks( spike_trains=True ) )\n    spks, ids = rcn.get_E_spks()\n    spike_trains = spk.load_spike_trains_from_txt( filename, edges=(0, sim_time),\n                                                   ignore_empty_lines=False )\n    \n    # -- define attractor indices\n    A1 = list( range( 0, 64 ) )\n    A2 = list( range( 100, 164 ) )\n    \n    # -- compute distance and sync profiles for the two attractors\n    spike_distance_profile_A1 = spk.spike_profile( spike_trains, indices=A1 )\n    spike_distance_profile_A2 = spk.spike_profile( spike_trains, indices=A2 )\n    spike_sync_profile_A1 = spk.spike_sync_profile( spike_trains, indices=A1 )\n    spike_sync_profile_A2 = spk.spike_sync_profile( spike_trains, indices=A2 )\n    \n    # -- make figure\n    fig = plt.figure( figsize=(30, 20) )\n    gs = plt.GridSpec( 3, 2, width_ratios=[ 4, 1 ] )\n    plt.rcParams.update( { 'font.size': 22 } )\n    mean_filter_size = 500\n    \n    # -- plot neuronal spikes with attractors in different colours\n    ax_spikes = fig.add_subplot( gs[ 0, 0 ] )\n    A1_indexes = np.argwhere( np.logical_and( ids >= A1[ 0 ], ids <= A1[ -1 ] ) )\n    A2_indexes = np.argwhere( np.logical_and( ids >= A2[ 0 ], ids <= A2[ -1 ] ) )\n    A1_spks = spks[ A1_indexes ]\n    A2_spks = spks[ A2_indexes ]\n    A1_ids = ids[ A1_indexes ]\n    A2_ids = ids[ A2_indexes ]\n    ax_spikes.plot( A1_spks, A1_ids, '.', markersize=0.5, alpha=0.5, color='orange', label='A1' )\n    ax_spikes.plot( A2_spks, A2_ids, '.', markersize=0.5, alpha=0.5, color='green', label='A2' )\n    ax_spikes.set_xlim( 0, sim_time )\n    ax_spikes.set_ylim( 0, rcn.N_input_e )\n    ax_spikes.set_xlabel( 'Time (s)', labelpad=10 )\n    ax_spikes.set_ylabel( 'Neuron ID' )\n    ax_spikes.set_title( 'Neuronal spikes' )\n    ax_spikes.legend()\n    \n    # -- add stimulus presentation markers\n    trans = ax_spikes.get_xaxis_transform()\n    ax_spikes.annotate( 'Stimulus 1', xy=(1, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_spikes.plot( [ 0.1, 1.9 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_spikes.annotate( 'Delay 1', xy=(2.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_spikes.plot( [ 2.1, 2.9 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_spikes.annotate( 'Stimulus 2', xy=(4, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_spikes.plot( [ 3.1, 4.9 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    ax_spikes.annotate( 'Delay 2', xy=(5.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_spikes.plot( [ 5.1, 5.9 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    \n    # -- plot spike distance profile\n    ax_distance = fig.add_subplot( gs[ 1, 0 ] )\n    x, y = spike_distance_profile_A1.get_plottable_data()\n    ax_distance.plot( x, y, '--', color='orange', label='A1' )\n    y_smooth = uniform_filter1d( y, size=mean_filter_size )\n    ax_distance.plot( x, y_smooth, '.', markersize=0.5, color='orange' )\n    x, y = spike_distance_profile_A2.get_plottable_data()\n    ax_distance.plot( x, y, '--', color='green', label='A2' )\n    y_smooth = uniform_filter1d( y, size=mean_filter_size )\n    ax_distance.plot( x, y_smooth, '.', markersize=0.5, color='green' )\n    ax_distance.set_xlim( 0, sim_time )\n    ax_distance.set_ylim( 0, 1 )\n    ax_distance.set_xlabel( 'Time (s)', labelpad=10 )\n    ax_distance.set_ylabel( 'SPIKE-distance' )\n    ax_distance.set_title( 'SPIKE-distance profile' )\n    ax_distance.legend()\n    \n    # -- add average measure markers\n    trans = ax_distance.get_xaxis_transform()\n    ax_distance.annotate( f'{spk.spike_distance( spike_trains, indices=A1, interval=(0, 2) ):.5f}',\n                          xy=(1, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_distance.plot( [ 0, 2 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_distance.annotate( f'{spk.spike_distance( spike_trains, indices=A1, interval=(2, 3) ):.5f}',\n                          xy=(2.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_distance.plot( [ 2.1, 2.9 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_distance.annotate( f'{spk.spike_distance( spike_trains, indices=A2, interval=(3, 5) ):.5f}',\n                          xy=(4, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_distance.plot( [ 3, 5 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    ax_distance.annotate( f'{spk.spike_distance( spike_trains, indices=A2, interval=(5, 6) ):.5f}',\n                          xy=(5.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_distance.plot( [ 5.1, 5.9 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    \n    ax_distance_matrix = fig.add_subplot( gs[ 1, 1 ] )\n    spike_distance = spk.spike_distance_matrix( spike_trains )\n    im1 = ax_distance_matrix.imshow( spike_distance, vmin=0, vmax=1, interpolation='none' )\n    # ax_distance_matrix.set_clim( 0, 1 )\n    fig.colorbar( im1, ax=ax_distance_matrix )\n    ax_distance_matrix.set_title( \"SPIKE-distance matrix\" )\n    \n    # -- plot spike sync profile\n    ax_sync = fig.add_subplot( gs[ 2, 0 ] )\n    x, y = spike_sync_profile_A1.get_plottable_data()\n    ax_sync.plot( x, y, '--', color='orange', alpha=0.5, label='A1' )\n    y_smooth = uniform_filter1d( y, size=mean_filter_size )\n    ax_sync.plot( x, y_smooth, '.', markersize=0.5, color='orange' )\n    x, y = spike_sync_profile_A2.get_plottable_data()\n    ax_sync.plot( x, y, '--', color='green', alpha=0.5, label='A2' )\n    y_smooth = uniform_filter1d( y, size=mean_filter_size )\n    ax_sync.plot( x, y_smooth, '.', markersize=0.5, color='green' )\n    ax_sync.set_xlim( 0, sim_time )\n    ax_sync.set_ylim( 0, 1 )\n    ax_sync.set_xlabel( 'Time (s)', labelpad=10 )\n    ax_sync.set_ylabel( 'SPIKE-sync' )\n    ax_sync.set_title( 'SPIKE-sync profile' )\n    ax_sync.legend()\n    \n    # -- add average measure markers\n    trans = ax_sync.get_xaxis_transform()\n    ax_sync.annotate( f'{spk.spike_sync( spike_trains, indices=A1, interval=(0, 2) ):.5f}',\n                      xy=(1, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_sync.plot( [ 0, 2 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_sync.annotate( f'{spk.spike_sync( spike_trains, indices=A1, interval=(2, 3) ):.5f}',\n                      xy=(2.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='orange' )\n    ax_sync.plot( [ 2.1, 2.9 ], [ -.08, -.08 ], linewidth=5, color=\"orange\", transform=trans, clip_on=False )\n    ax_sync.annotate( f'{spk.spike_sync( spike_trains, indices=A2, interval=(3, 5) ):.5f}',\n                      xy=(4, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_sync.plot( [ 3, 5 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    ax_sync.annotate( f'{spk.spike_sync( spike_trains, indices=A2, interval=(5, 6) ):.5f}',\n                      xy=(5.5, -.1), xycoords=trans, ha=\"center\", va=\"top\", color='green' )\n    ax_sync.plot( [ 5.1, 5.9 ], [ -.08, -.08 ], linewidth=5, color=\"green\", transform=trans, clip_on=False )\n    \n    ax_sync_matrix = fig.add_subplot( gs[ 2, 1 ] )\n    spike_sync = spk.spike_sync_matrix( spike_trains )\n    im1 = ax_sync_matrix.imshow( spike_sync, vmin=0, vmax=1, interpolation='none' )\n    # ax_sync_matrix.set_clim( 0, 1 )\n    fig.colorbar( im1, ax=ax_sync_matrix )\n    ax_sync_matrix.set_title( \"SPIKE-sync matrix\" )\n    \n    # -- figure adjustments\n    plt.tight_layout()\n    \n    fig.show()\n    fig.savefig( './attractor_synchronisation.pdf',\n                 bbox_inches='tight' )\n    \n    # print( \"Average SPIKE-distance within A1 (0, 2)s:\",\n    #        spk.spike_distance( spike_trains, indices=A1, interval=(0, 2) ) )\n    # print( \"Average SPIKE-distance within A1 (2, 3)s:\",\n    #        spk.spike_distance( spike_trains, indices=A1, interval=(2, 3) ) )\n    # print( \"Average SPIKE-distance within A2 (3, 5)s:\",\n    #        spk.spike_distance( spike_trains, indices=A2, interval=(3, 5) ) )\n    # print( \"Average SPIKE-distance within A2 (5, 6)s:\",\n    #        spk.spike_distance( spike_trains, indices=A2, interval=(5, 6) ) )\n    # print( \"Average SPIKE-sync within A1 (0, 2)s:\", spk.spike_sync( spike_trains, indices=A1, interval=(0, 2) ) )\n    # print( \"Average SPIKE-sync within A1 (2, 3)s:\", spk.spike_sync( spike_trains, indices=A1, interval=(2, 3) ) )\n    # print( \"Average SPIKE-sync within A2 (3, 5)s:\", spk.spike_sync( spike_trains, indices=A2, interval=(3, 5) ) )\n    # print( \"Average SPIKE-sync within A2 (5, 6)s:\", spk.spike_sync( spike_trains, indices=A2, interval=(5, 6) ) )\n
===================================================================
diff --git a/plotting_functions/spike_synchronisation.py b/plotting_functions/spike_synchronisation.py
--- a/plotting_functions/spike_synchronisation.py	
+++ b/plotting_functions/spike_synchronisation.py	
@@ -1,5 +1,3 @@
-import termios
-
 import numpy as np
 
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"76692ba1-b4fb-4a04-bc11-3ba0a7f5caf1\" name=\"Changes\" comment=\"- added moving averages to plots\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/plotting_functions/graphing.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/plotting_functions/graphing.py\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/plotting_functions/spike_synchronisation.py\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/plotting_functions/spike_synchronisation.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FlaskConsoleOptions\" custom-start-script=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\">\n    <envs>\n      <env key=\"FLASK_APP\" value=\"app\" />\n    </envs>\n    <option name=\"myCustomStartScript\" value=\"import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\\nApp: %s [%s]\\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))\" />\n    <option name=\"myEnvs\">\n      <map>\n        <entry key=\"FLASK_APP\" value=\"app\" />\n      </map>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitSEFilterConfiguration\">\n    <file-type-list>\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\n      <filtered-out-file-type name=\"TAG\" />\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\n    </file-type-list>\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"24amsKRAnXElR0HFBR99goRswhz\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"ASKED_ADD_EXTERNAL_FILES\" value=\"true\" />\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.pluginManager\" />\n  </component>\n  <component name=\"RunManager\" selected=\"Python.network_visualisation\">\n    <configuration default=\"true\" type=\"PythonConfigurationType\" factoryName=\"Python\">\n      <module name=\"wm_colaboration\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"network_visualisation\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wm_colaboration\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/graph_analysis\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/graph_analysis/network_visualisation.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <configuration name=\"spike_synchronisation\" type=\"PythonConfigurationType\" factoryName=\"Python\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"wm_colaboration\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$/plotting_functions\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <EXTENSION ID=\"PythonCoverageRunConfigurationExtension\" runner=\"coverage.py\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/plotting_functions/spike_synchronisation.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"true\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Python.network_visualisation\" />\n        <item itemvalue=\"Python.spike_synchronisation\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"76692ba1-b4fb-4a04-bc11-3ba0a7f5caf1\" name=\"Changes\" comment=\"\" />\n      <created>1643877278333</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1643877278333</updated>\n      <workItem from=\"1643877279608\" duration=\"17000\" />\n      <workItem from=\"1643877300171\" duration=\"489000\" />\n      <workItem from=\"1643879950374\" duration=\"24601000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"- added plot_SPIKE_profile function to plot SPIKE-distance and SPIKE-synchronisation of attractors\">\n      <created>1643888462476</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1643888462476</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"- fixed bug in plot_SPIKE_profile where only two neurons were considered&#10;- updated plot layout\">\n      <created>1643906876866</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1643906876866</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"- added moving averages to plots\">\n      <created>1643912109291</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1643912109291</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"4\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"spike_train_analysis\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"- added plot_SPIKE_profile function to plot SPIKE-distance and SPIKE-synchronisation of attractors\" />\n    <MESSAGE value=\"- fixed bug in plot_SPIKE_profile where only two neurons were considered&#10;- updated plot layout\" />\n    <MESSAGE value=\"- added moving averages to plots\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"- added moving averages to plots\" />\n  </component>\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\n    <SUITE FILE_PATH=\"coverage/wm_colaboration$network_visualisation.coverage\" NAME=\"network_visualisation Coverage Results\" MODIFIED=\"1643910723087\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"coverage.py\" COVERAGE_BY_TEST_ENABLED=\"true\" COVERAGE_TRACING_ENABLED=\"false\" WORKING_DIRECTORY=\"$PROJECT_DIR$/graph_analysis\" />\n  </component>\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,8 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="76692ba1-b4fb-4a04-bc11-3ba0a7f5caf1" name="Changes" comment="- added moving averages to plots">
+    <list default="true" id="76692ba1-b4fb-4a04-bc11-3ba0a7f5caf1" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/graph_analysis/network_visualisation.py" beforeDir="false" afterPath="$PROJECT_DIR$/graph_analysis/network_visualisation.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/plotting_functions/graphing.py" beforeDir="false" afterPath="$PROJECT_DIR$/plotting_functions/graphing.py" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/plotting_functions/spike_synchronisation.py" beforeDir="false" afterPath="$PROJECT_DIR$/plotting_functions/spike_synchronisation.py" afterDir="false" />
     </list>
@@ -198,8 +199,16 @@
     <MESSAGE value="- fixed bug in plot_SPIKE_profile where only two neurons were considered&#10;- updated plot layout" />
     <MESSAGE value="- added moving averages to plots" />
     <option name="LAST_COMMIT_MESSAGE" value="- added moving averages to plots" />
+  </component>
+  <component name="XDebuggerManager">
+    <watches-manager>
+      <configuration name="PythonConfigurationType">
+        <watch expression="len(pyvis_graph.edges)" language="Python" />
+        <watch expression="len(pyvis_graph.nodes)" language="Python" />
+      </configuration>
+    </watches-manager>
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/wm_colaboration$network_visualisation.coverage" NAME="network_visualisation Coverage Results" MODIFIED="1643910723087" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/graph_analysis" />
+    <SUITE FILE_PATH="coverage/wm_colaboration$network_visualisation.coverage" NAME="network_visualisation Coverage Results" MODIFIED="1644234785317" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/graph_analysis" />
   </component>
 </project>
\ No newline at end of file
